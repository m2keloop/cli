import (
	"context"
	"errors"
)

func {{.model}}Create(ctx context.Context, model *model.{{.model}}) (err error) {
	count, err := getDB().Context(ctx).Insert(model)
	if err != nil {
		return
	}

	if count <= 0 {
		err = errors.New("insert {{.model}} error")
	}
	return
}

func {{.model}}UpdateByItem(ctx context.Context, model *model.{{.model}}) (err error) {
	if model.Id <= 0 {
		err = errors.New("Update {{.model}} id can't not nil")
		return
	}

    //xorm return count是影响行数，如果不变更为0，不能抛出error
	_, err = getDB().Context(ctx).ID(model.Id).Update(model)
	if err != nil {
		return
	}

	return
}

func {{.model}}GetByItem(ctx context.Context, model *model.{{.model}}) (has bool, err error) {
	has, err = getDB().Context(ctx).OrderBy("id desc").Get(model)
	return
}
